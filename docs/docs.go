// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/brc20/address/{address}/balance/info": {
            "get": {
                "description": "Get brc20 balance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Get brc20 balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20BalanceList"
                        }
                    }
                }
            }
        },
        "/brc20/address/{address}/{tick}": {
            "get": {
                "description": "Check inscription brc20 valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Check inscription brc20 valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.BalanceDetails"
                        }
                    }
                }
            }
        },
        "/brc20/check/info": {
            "get": {
                "description": "Check inscription brc20 valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Check inscription brc20 valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscriptionId",
                        "name": "inscriptionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inscriptionNumber",
                        "name": "inscriptionNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.CheckBrc20InscriptionReq"
                        }
                    }
                }
            }
        },
        "/brc20/claim/order": {
            "get": {
                "description": "Fetch one claim order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch one claim order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20ClaimItem"
                        }
                    }
                }
            }
        },
        "/brc20/claim/order/update": {
            "post": {
                "description": "Update claim order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Update claim order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20ClaimUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/guide/price/set": {
            "post": {
                "description": "Set guide price",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Set guide price",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Brc20MarketPriceSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/inscribe/commit": {
            "post": {
                "description": "Commit inscribe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Commit inscribe",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Brc20CommitReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/inscribe/pre": {
            "post": {
                "description": "Pre inscribe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Pre inscribe",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Brc20PreReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/kline": {
            "get": {
                "description": "Fetch tick kline data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch tick kline data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "interval：15m/1h/4h/1d/1w/",
                        "name": "interval",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.KlineItem"
                        }
                    }
                }
            }
        },
        "/brc20/order/ask/push": {
            "post": {
                "description": "Push order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Push order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20PushReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid": {
            "get": {
                "description": "Fetch bid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch bid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inscriptionId",
                        "name": "inscriptionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inscriptionNumber",
                        "name": "inscriptionNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coinAmount",
                        "name": "coinAmount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isPool for pool",
                        "name": "isPool",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "orderId of pool",
                        "name": "orderId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.BidPsbt"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/do": {
            "post": {
                "description": "Do bid order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Do bid order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20DoBidReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/dummy/{address}": {
            "get": {
                "description": "Get bid dummy list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Get bid dummy list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "skip",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20BidDummyResponse"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/pre": {
            "get": {
                "description": "Fetch pre bid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch pre bid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit: Max-50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isPool",
                        "name": "isPool",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.OrderResponse"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/push": {
            "post": {
                "description": "Push bid order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Push bid order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20UpdateBidReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/update": {
            "post": {
                "description": "Update order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Update order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/{orderId}": {
            "get": {
                "description": "Fetch one order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch one order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "orderId",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "buyerAddress",
                        "name": "buyerAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20Item"
                        }
                    }
                }
            }
        },
        "/brc20/orders": {
            "get": {
                "description": "Fetch orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sellerAddress",
                        "name": "sellerAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "buyerAddress",
                        "name": "buyerAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "orderState: 1-create,2-finish,3-cancel,5-timeout,6-err,100-all",
                        "name": "orderState",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "orderType: 1-sell,2-buy",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit: Max-50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortKey: timestamp/coinRatePrice, default:timestamp",
                        "name": "sortKey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sortType: 1/-1",
                        "name": "sortType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.OrderResponse"
                        }
                    }
                }
            }
        },
        "/brc20/orders/user/{address}": {
            "get": {
                "description": "Fetch user orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch user orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "orderState: 1-create,2-finish,3-cancel,5-timeout,6-err,100-all",
                        "name": "orderState",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "orderType: 1-sell,2-buy",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit: Max-50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortKey: timestamp/coinRatePrice, default:timestamp",
                        "name": "sortKey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sortType: 1/-1",
                        "name": "sortType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.OrderResponse"
                        }
                    }
                }
            }
        },
        "/brc20/pool/inscription": {
            "get": {
                "description": "Fetch pool inscription",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch pool inscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolInscriptionResp"
                        }
                    }
                }
            }
        },
        "/brc20/pool/order/claim": {
            "post": {
                "description": "get claim pool order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "get claim pool order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PoolBrc20ClaimReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolBrc20ClaimResp"
                        }
                    }
                }
            }
        },
        "/brc20/pool/order/claim/commit": {
            "post": {
                "description": "claim pool order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "claim pool order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PoolBrc20ClaimUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/pool/order/push": {
            "post": {
                "description": "Push pool order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Push pool order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PoolBrc20PushReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/pool/order/update": {
            "post": {
                "description": "Update pool order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Update pool order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderPoolBrc20UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/pool/order/{orderId}": {
            "get": {
                "description": "Fetch one pool order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch one pool order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "orderId",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolBrc20Item"
                        }
                    }
                }
            }
        },
        "/brc20/pool/orders": {
            "get": {
                "description": "Fetch pool orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch pool orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "poolState: 1-add,2-remove,3-used,4-claim",
                        "name": "poolState",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "poolType: 1-tick,2-btc",
                        "name": "poolType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit: Max-50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortKey: timestamp/coinRatePrice, default:timestamp",
                        "name": "sortKey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sortType: 1/-1",
                        "name": "sortType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolResponse"
                        }
                    }
                }
            }
        },
        "/brc20/pool/pair/info": {
            "get": {
                "description": "Fetch pool pair info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch pool pair info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pair",
                        "name": "pair",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolInfoResponse"
                        }
                    }
                }
            }
        },
        "/brc20/pool/pair/info/one": {
            "get": {
                "description": "Fetch one pool pair info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch one pool pair info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pair",
                        "name": "pair",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolInfoItem"
                        }
                    }
                }
            }
        },
        "/brc20/pool/pair/key": {
            "get": {
                "description": "Fetch pool key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch pool key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.PoolKeyInfoResp"
                        }
                    }
                }
            }
        },
        "/brc20/tickers": {
            "get": {
                "description": "Fetch tick info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch tick info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20TickInfoResponse"
                        }
                    }
                }
            }
        },
        "/brc20/transfer/colddown": {
            "post": {
                "description": "Cold down the brc20 transfer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the brc20 transfer",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownBrcTransfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20TransferCommitResp"
                        }
                    }
                }
            }
        },
        "/brc20/transfer/colddown/batch": {
            "post": {
                "description": "Cold down the brc20 transfer batch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the brc20 transfer batch",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownBrcTransferBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20TransferCommitBatchResp"
                        }
                    }
                }
            }
        },
        "/brc20/transfer/colddown/batch/ask": {
            "post": {
                "description": "Cold down the brc20 transfer batch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the brc20 transfer batch",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownBrcTransferBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20TransferCommitBatchResp"
                        }
                    }
                }
            }
        },
        "/brc20/transfer/colddown/batch/pool": {
            "post": {
                "description": "Cold down the brc20 transfer batch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the brc20 transfer batch",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownBrcTransferBatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20TransferCommitBatchResp"
                        }
                    }
                }
            }
        },
        "/brc20/utxo/colddown": {
            "post": {
                "description": "Do bid order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the utxo",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownUtxo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/ws/uuid": {
            "get": {
                "description": "Fetch uuid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch uuid",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.WsUuidResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.FreeState": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "FreeStateYes",
                "FreeStateClaim",
                "FreeStatePoolClaim"
            ]
        },
        "model.OrderState": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                8,
                7,
                9,
                10,
                11,
                12,
                100
            ],
            "x-enum-varnames": [
                "OrderStateCreate",
                "OrderStateFinish",
                "OrderStateCancel",
                "OrderStatePreCreate",
                "OrderStateTimeout",
                "OrderStateErr",
                "OrderStateFinishButErr",
                "OrderStatePreAsk",
                "OrderStatePreClaim",
                "OrderStateFinishClaim",
                "OrderStatePoolPreClaim",
                "OrderStatePoolFinishClaim",
                "OrderStateAll"
            ]
        },
        "model.OrderType": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "OrderTypeSell",
                "OrderTypeBuy"
            ]
        },
        "model.PoolState": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "PoolStateAdd",
                "PoolStateRemove",
                "PoolStateUsed",
                "PoolStateClaim"
            ]
        },
        "model.PoolType": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "PoolTypeTick",
                "PoolTypeBtc",
                "PoolTypeBoth",
                "PoolTypeMultiSigInscription"
            ]
        },
        "model.UtxoType": {
            "type": "integer",
            "enum": [
                1,
                2,
                6,
                10
            ],
            "x-enum-varnames": [
                "UtxoTypeDummy",
                "UtxoTypeBidY",
                "UtxoTypeFakerInscription",
                "UtxoTypeMultiInscription"
            ]
        },
        "request.Brc20CommitReq": {
            "type": "object",
            "properties": {
                "feeAddress": {
                    "description": "platform fee address",
                    "type": "string"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "utxos": {
                    "description": "utxo list",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.ReceiveUtxo"
                    }
                }
            }
        },
        "request.Brc20MarketPriceSetReq": {
            "type": "object",
            "properties": {
                "guidePrice": {
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "pair": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.Brc20PreReq": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "feeRate": {
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "receiveAddress": {
                    "description": "Address which user receive ordinals",
                    "type": "string"
                }
            }
        },
        "request.ColdDownBrcTransfer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "changeAddress": {
                    "type": "string"
                },
                "feeRate": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "inscribeTransferAmount": {
                    "type": "integer"
                },
                "net": {
                    "type": "string"
                },
                "pkScript": {
                    "type": "string"
                },
                "preTxHex": {
                    "type": "string"
                },
                "priKeyHex": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                }
            }
        },
        "request.ColdDownBrcTransferBatch": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "changeAddress": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "feeRate": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "inscribeTransferAmount": {
                    "type": "integer"
                },
                "isOnlyCal": {
                    "type": "boolean"
                },
                "net": {
                    "type": "string"
                },
                "outAddressType": {
                    "type": "string"
                },
                "pkScript": {
                    "type": "string"
                },
                "preTxHex": {
                    "type": "string"
                },
                "priKeyHex": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                }
            }
        },
        "request.ColdDownUtxo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "changeAddress": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "feeRate": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "net": {
                    "type": "string"
                },
                "perAmount": {
                    "type": "integer"
                },
                "pkScript": {
                    "type": "string"
                },
                "preTxHex": {
                    "type": "string"
                },
                "priKeyHex": {
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                },
                "utxoType": {
                    "$ref": "#/definitions/model.UtxoType"
                }
            }
        },
        "request.OrderBrc20ClaimUpdateReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "type": "string"
                }
            }
        },
        "request.OrderBrc20DoBidReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "request.OrderBrc20PushReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "coinAmount": {
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderState": {
                    "description": "1-create",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OrderState"
                        }
                    ]
                },
                "orderType": {
                    "description": "1-sell,2-buy",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OrderType"
                        }
                    ]
                },
                "psbtRaw": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.OrderBrc20UpdateBidReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "description": "the purchase value of input",
                    "type": "integer"
                },
                "buyerInValue": {
                    "description": "the real value of input",
                    "type": "integer"
                },
                "fee": {
                    "description": "fee",
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "type": "string"
                },
                "rate": {
                    "description": "sats/B",
                    "type": "integer"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.OrderBrc20UpdateReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "broadcastIndex": {
                    "description": "1",
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "orderState": {
                    "description": "2-finish/3-cancel",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OrderState"
                        }
                    ]
                },
                "psbtRaw": {
                    "type": "string"
                }
            }
        },
        "request.OrderPoolBrc20UpdateReq": {
            "type": "object",
            "properties": {
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "poolState": {
                    "description": "1-add,2-remove,3-used,4-claim",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PoolState"
                        }
                    ]
                }
            }
        },
        "request.PoolBrc20ClaimReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "poolOrderId": {
                    "type": "string"
                },
                "preSigScript": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.PoolBrc20ClaimUpdateReq": {
            "type": "object",
            "properties": {
                "poolOrderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "type": "string"
                },
                "rewardIndex": {
                    "description": "0-no, 1-yes",
                    "type": "integer"
                }
            }
        },
        "request.PoolBrc20PushReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "coinAmount": {
                    "type": "integer"
                },
                "coinPsbtRaw": {
                    "type": "string"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "pair": {
                    "type": "string"
                },
                "poolState": {
                    "description": "1-add,2-remove,3-used,4-claim",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PoolState"
                        }
                    ]
                },
                "poolType": {
                    "description": "1-tick,2-btc,3-both",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PoolType"
                        }
                    ]
                },
                "psbtRaw": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.ReceiveUtxo": {
            "type": "object",
            "properties": {
                "outAmount": {
                    "type": "integer"
                },
                "outIndex": {
                    "type": "integer"
                },
                "outTx": {
                    "type": "string"
                }
            }
        },
        "respond.BalanceDetails": {
            "type": "object",
            "properties": {
                "availableBalance": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                },
                "totalPage": {
                    "type": "string"
                },
                "transferBalance": {
                    "type": "string"
                },
                "transferBalanceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.BalanceItem"
                    }
                }
            }
        },
        "respond.BalanceItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                }
            }
        },
        "respond.BalanceListItem": {
            "type": "object",
            "properties": {
                "availableBalance": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                },
                "transferBalance": {
                    "type": "string"
                }
            }
        },
        "respond.BidPsbt": {
            "type": "object",
            "properties": {
                "net": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "respond.Brc20BalanceList": {
            "type": "object",
            "properties": {
                "balanceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.BalanceListItem"
                    }
                },
                "limit": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "totalPage": {
                    "type": "string"
                }
            }
        },
        "respond.Brc20BidDummyResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.DummyItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.Brc20ClaimItem": {
            "type": "object",
            "properties": {
                "availableCount": {
                    "description": "AvailableCount",
                    "type": "integer"
                },
                "coinAmount": {
                    "description": "Brc20 amount",
                    "type": "integer"
                },
                "fee": {
                    "description": "claim fee",
                    "type": "integer"
                },
                "inscriptionId": {
                    "description": "InscriptionId",
                    "type": "string"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "orderId": {
                    "description": "Order ID",
                    "type": "string"
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "tick": {
                    "description": "Brc20 symbol",
                    "type": "string"
                }
            }
        },
        "respond.Brc20Item": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Btc: sat",
                    "type": "integer"
                },
                "buyerAddress": {
                    "description": "Buyer's address",
                    "type": "string"
                },
                "coinAmount": {
                    "description": "Brc20 amount",
                    "type": "integer"
                },
                "coinDecimalNum": {
                    "description": "omitempty",
                    "type": "integer"
                },
                "coinRatePrice": {
                    "description": "Rate for brc20-btc",
                    "type": "integer"
                },
                "decimalNum": {
                    "description": "Btc decimal",
                    "type": "integer"
                },
                "freeState": {
                    "description": "1-for free",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.FreeState"
                        }
                    ]
                },
                "inscriptionId": {
                    "description": "InscriptionId",
                    "type": "string"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "orderId": {
                    "description": "Order ID",
                    "type": "string"
                },
                "orderState": {
                    "description": "Order state：1-create,2-finish,3-cancel",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OrderState"
                        }
                    ]
                },
                "orderType": {
                    "description": "Order type：1-sell,2-buy",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OrderType"
                        }
                    ]
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "sellerAddress": {
                    "description": "Seller's address",
                    "type": "string"
                },
                "tick": {
                    "description": "Brc20 symbol",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Create time",
                    "type": "integer"
                }
            }
        },
        "respond.Brc20TickInfoResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.Brc20TickItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.Brc20TickItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "at": {
                    "description": "updateTime",
                    "type": "integer"
                },
                "avgPrice": {
                    "type": "string"
                },
                "buy": {
                    "type": "string"
                },
                "high": {
                    "type": "string"
                },
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "low": {
                    "type": "string"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "open": {
                    "type": "string"
                },
                "pair": {
                    "description": "pair for trade",
                    "type": "string"
                },
                "priceChangePercent": {
                    "description": "0.11 mean 0.11%",
                    "type": "string"
                },
                "quoteSymbol": {
                    "description": "+/-",
                    "type": "string"
                },
                "sell": {
                    "type": "string"
                },
                "tick": {
                    "description": "tick",
                    "type": "string"
                },
                "vol": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                }
            }
        },
        "respond.Brc20TransferCommitBatchResp": {
            "type": "object",
            "properties": {
                "commitTxHash": {
                    "type": "string"
                },
                "fees": {
                    "type": "integer"
                },
                "inscriptionIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "revealTxHashList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "respond.Brc20TransferCommitResp": {
            "type": "object",
            "properties": {
                "commitTxHash": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "revealTxHash": {
                    "type": "string"
                }
            }
        },
        "respond.CheckBrc20InscriptionReq": {
            "type": "object",
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "availableTransferState": {
                    "description": "Available Transfer state: success/fail",
                    "type": "string"
                },
                "blockHeight": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                },
                "inscriptionState": {
                    "description": "inscribe state: success/fail",
                    "type": "string"
                },
                "location": {
                    "description": "location - txid:vout:offset",
                    "type": "string"
                },
                "ownerAddress": {
                    "type": "string"
                },
                "token": {
                    "description": "tick name",
                    "type": "string"
                },
                "tokenType": {
                    "description": "token type",
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                }
            }
        },
        "respond.DummyItem": {
            "type": "object",
            "properties": {
                "dummyId": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "respond.KlineItem": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "string"
                },
                "high": {
                    "type": "string"
                },
                "low": {
                    "type": "string"
                },
                "open": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "respond.Message": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "processingTime": {
                    "type": "integer"
                }
            }
        },
        "respond.OrderResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.Brc20Item"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.PoolBrc20ClaimResp": {
            "type": "object",
            "properties": {
                "coinAmount": {
                    "description": "Brc20 amount",
                    "type": "integer"
                },
                "coinPsbtRaw": {
                    "description": "coin PSBT Raw",
                    "type": "string"
                },
                "coinTransferPsbtRaw": {
                    "description": "coin transfer PSBT Raw",
                    "type": "string"
                },
                "fee": {
                    "description": "claim fee",
                    "type": "integer"
                },
                "inscriptionId": {
                    "description": "InscriptionId",
                    "type": "string"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "orderId": {
                    "description": "Order ID",
                    "type": "string"
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "rewardCoinAmount": {
                    "type": "integer"
                },
                "rewardPsbtRaw": {
                    "description": "reward PSBT Raw",
                    "type": "string"
                },
                "tick": {
                    "description": "Brc20 symbol",
                    "type": "string"
                }
            }
        },
        "respond.PoolBrc20Item": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "coinAddress": {
                    "description": "tick",
                    "type": "string"
                },
                "coinAmount": {
                    "description": "tick",
                    "type": "integer"
                },
                "coinDecimalNum": {
                    "description": "tick",
                    "type": "integer"
                },
                "coinPsbtRaw": {
                    "description": "coin PSBT Raw",
                    "type": "string"
                },
                "decimalNum": {
                    "type": "integer"
                },
                "inscriptionId": {
                    "description": "InscriptionId",
                    "type": "string"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "orderId": {
                    "description": "Order ID",
                    "type": "string"
                },
                "pair": {
                    "description": "Brc20 pair",
                    "type": "string"
                },
                "poolState": {
                    "description": "pool state：1-add,2-remove,3-used,4-claim",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PoolState"
                        }
                    ]
                },
                "poolType": {
                    "description": "pool type：1-tick,2-btc",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PoolType"
                        }
                    ]
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "tick": {
                    "description": "Brc20 symbol",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Create time",
                    "type": "integer"
                }
            }
        },
        "respond.PoolInfoItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Btc: sat",
                    "type": "integer"
                },
                "coinAmount": {
                    "type": "integer"
                },
                "coinDecimalNum": {
                    "description": "omitempty",
                    "type": "integer"
                },
                "decimalNum": {
                    "description": "Btc decimal",
                    "type": "integer"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "ownAmount": {
                    "type": "integer"
                },
                "ownCoinAmount": {
                    "type": "integer"
                },
                "ownCount": {
                    "type": "integer"
                },
                "pair": {
                    "description": "Brc20 pair",
                    "type": "string"
                },
                "tick": {
                    "description": "Brc20 symbol",
                    "type": "string"
                }
            }
        },
        "respond.PoolInfoResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.PoolInfoItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.PoolInscriptionItem": {
            "type": "object",
            "properties": {
                "coinAmount": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                }
            }
        },
        "respond.PoolInscriptionResp": {
            "type": "object",
            "properties": {
                "availableList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.PoolInscriptionItem"
                    }
                },
                "net": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.PoolKeyInfoResp": {
            "type": "object",
            "properties": {
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "publicKey": {
                    "description": "key",
                    "type": "string"
                }
            }
        },
        "respond.PoolResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.PoolBrc20Item"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.WsUuidResp": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/book",
	Schemes:          []string{"https"},
	Title:            "OrdBook API Service",
	Description:      "OrdBook API Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
