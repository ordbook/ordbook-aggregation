// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/brc20/address/{address}/{tick}": {
            "get": {
                "description": "Check inscription brc20 valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Check inscription brc20 valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.BalanceDetails"
                        }
                    }
                }
            }
        },
        "/brc20/brc20/transfer/colddown": {
            "post": {
                "description": "Cold down the brc20 transfer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the brc20 transfer",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownBrcTransfer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/check/info": {
            "get": {
                "description": "Check inscription brc20 valid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Check inscription brc20 valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inscriptionId",
                        "name": "inscriptionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inscriptionNumber",
                        "name": "inscriptionNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.CheckBrc20InscriptionReq"
                        }
                    }
                }
            }
        },
        "/brc20/guide/price/set": {
            "post": {
                "description": "Set guide price",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Set guide price",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Brc20MarketPriceSetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/inscribe/commit": {
            "post": {
                "description": "Commit inscribe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Commit inscribe",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Brc20CommitReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/inscribe/pre": {
            "post": {
                "description": "Pre inscribe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Pre inscribe",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Brc20PreReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/kline": {
            "get": {
                "description": "Fetch tick kline data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch tick kline data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "intervalï¼š1m/1s/15m/1h/4h/1d/1w/",
                        "name": "interval",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "Limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.KlineItem"
                        }
                    }
                }
            }
        },
        "/brc20/order/ask/push": {
            "post": {
                "description": "Push order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Push order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20PushReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid": {
            "get": {
                "description": "Fetch bid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch bid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inscriptionId",
                        "name": "inscriptionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inscriptionNumber",
                        "name": "inscriptionNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "coinAmount",
                        "name": "coinAmount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "amount",
                        "name": "amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.BidPsbt"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/do": {
            "post": {
                "description": "Do bid order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Do bid order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20DoBidReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/dummy/{address}": {
            "get": {
                "description": "Get bid dummy list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Get bid dummy list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "net",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "skip",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20BidDummyResponse"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/pre": {
            "get": {
                "description": "Fetch pre bid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch pre bid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.OrderResponse"
                        }
                    }
                }
            }
        },
        "/brc20/order/bid/push": {
            "post": {
                "description": "Push bid order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Push bid order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20UpdateBidReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/order/update": {
            "post": {
                "description": "Update order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Update order",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OrderBrc20UpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/orders": {
            "get": {
                "description": "Fetch orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sellerAddress",
                        "name": "sellerAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "buyerAddress",
                        "name": "buyerAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "orderState: 1-create,2-finish,3-cancel",
                        "name": "orderState",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "orderType: 1-sell,2-buy",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit: Max-50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortKey: timestamp/coinRatePrice, default:timestamp",
                        "name": "sortKey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sortType",
                        "name": "sortType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.OrderResponse"
                        }
                    }
                }
            }
        },
        "/brc20/orders/user/{address}": {
            "get": {
                "description": "Fetch user orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch user orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "net:mainnet/signet/testnet",
                        "name": "net",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "orderState: 1-create,2-finish,3-cancel",
                        "name": "orderState",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "orderType: 1-sell,2-buy",
                        "name": "orderType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit: Max-50",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "flag",
                        "name": "flag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sortKey: timestamp/coinRatePrice, default:timestamp",
                        "name": "sortKey",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "sortType",
                        "name": "sortType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.OrderResponse"
                        }
                    }
                }
            }
        },
        "/brc20/tickers": {
            "get": {
                "description": "Fetch tick info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch tick info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tick",
                        "name": "tick",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Brc20TickInfoResponse"
                        }
                    }
                }
            }
        },
        "/brc20/utxo/colddown": {
            "post": {
                "description": "Do bid order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Cold down the utxo",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ColdDownUtxo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.Message"
                        }
                    }
                }
            }
        },
        "/brc20/ws/uuid": {
            "get": {
                "description": "Fetch uuid",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brc20"
                ],
                "summary": "Fetch uuid",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respond.WsUuidResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.Brc20CommitReq": {
            "type": "object",
            "properties": {
                "feeAddress": {
                    "description": "platform fee address",
                    "type": "string"
                },
                "net": {
                    "description": "mainnet/signet/testnet",
                    "type": "string"
                }
            }
        },
        "request.Brc20MarketPriceSetReq": {
            "type": "object",
            "properties": {
                "guidePrice": {
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "pair": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.Brc20PreReq": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "feeRate": {
                    "type": "integer"
                },
                "net": {
                    "description": "mainnet/signet/testnet",
                    "type": "string"
                },
                "receiveAddress": {
                    "description": "Address which user receive ordinals",
                    "type": "string"
                }
            }
        },
        "request.ColdDownBrcTransfer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "changeAddress": {
                    "type": "string"
                },
                "feeRate": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "inscribeTransferAmount": {
                    "type": "integer"
                },
                "net": {
                    "type": "string"
                },
                "pkScript": {
                    "type": "string"
                },
                "preTxHex": {
                    "type": "string"
                },
                "priKeyHex": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                }
            }
        },
        "request.ColdDownUtxo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "changeAddress": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "feeRate": {
                    "type": "integer"
                },
                "index": {
                    "type": "integer"
                },
                "net": {
                    "type": "string"
                },
                "perAmount": {
                    "type": "integer"
                },
                "pkScript": {
                    "type": "string"
                },
                "preTxHex": {
                    "type": "string"
                },
                "priKeyHex": {
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                },
                "utxoType": {
                    "type": "integer"
                }
            }
        },
        "request.OrderBrc20DoBidReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "request.OrderBrc20PushReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "coinAmount": {
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderState": {
                    "description": "1-create",
                    "type": "integer"
                },
                "orderType": {
                    "description": "1-sell,2-buy",
                    "type": "integer"
                },
                "psbtRaw": {
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.OrderBrc20UpdateBidReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "description": "the purchase value of input",
                    "type": "integer"
                },
                "buyerInValue": {
                    "description": "the real value of input",
                    "type": "integer"
                },
                "fee": {
                    "description": "fee",
                    "type": "integer"
                },
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "type": "string"
                },
                "rate": {
                    "description": "sats/B",
                    "type": "integer"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "request.OrderBrc20UpdateReq": {
            "type": "object",
            "properties": {
                "net": {
                    "description": "livenet/signet/testnet",
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "orderState": {
                    "description": "2-finish/3-cancel",
                    "type": "integer"
                },
                "psbtRaw": {
                    "type": "string"
                }
            }
        },
        "respond.BalanceDetails": {
            "type": "object",
            "properties": {
                "availableBalance": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                },
                "totalPage": {
                    "type": "string"
                },
                "transferBalance": {
                    "type": "string"
                },
                "transferBalanceList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.BalanceItem"
                    }
                }
            }
        },
        "respond.BalanceItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                }
            }
        },
        "respond.BidPsbt": {
            "type": "object",
            "properties": {
                "net": {
                    "type": "string"
                },
                "orderId": {
                    "type": "string"
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "tick": {
                    "type": "string"
                }
            }
        },
        "respond.Brc20BidDummyResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.DummyItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.Brc20Item": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Btc: sat",
                    "type": "integer"
                },
                "buyerAddress": {
                    "description": "Buyer's address",
                    "type": "string"
                },
                "coinAmount": {
                    "description": "Brc20 amount",
                    "type": "integer"
                },
                "coinDecimalNum": {
                    "description": "omitempty",
                    "type": "integer"
                },
                "coinRatePrice": {
                    "description": "Rate for brc20-btc",
                    "type": "integer"
                },
                "decimalNum": {
                    "description": "Btc decimal",
                    "type": "integer"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "orderId": {
                    "description": "Order ID",
                    "type": "string"
                },
                "orderState": {
                    "description": "Order stateï¼š1-create,2-finish,3-cancel",
                    "type": "integer"
                },
                "orderType": {
                    "description": "Order typeï¼š1-sell,2-buy",
                    "type": "integer"
                },
                "psbtRaw": {
                    "description": "PSBT Raw",
                    "type": "string"
                },
                "sellerAddress": {
                    "description": "Seller's address",
                    "type": "string"
                },
                "tick": {
                    "description": "Brc20 symbol",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Create time",
                    "type": "integer"
                }
            }
        },
        "respond.Brc20TickInfoResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.Brc20TickItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.Brc20TickItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "at": {
                    "description": "updateTime",
                    "type": "integer"
                },
                "avgPrice": {
                    "type": "string"
                },
                "buy": {
                    "type": "string"
                },
                "high": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "low": {
                    "type": "string"
                },
                "net": {
                    "description": "Net env",
                    "type": "string"
                },
                "open": {
                    "type": "string"
                },
                "pair": {
                    "description": "pair for trade",
                    "type": "string"
                },
                "priceChangePercent": {
                    "description": "0.11 mean 0.11%",
                    "type": "string"
                },
                "quoteSymbol": {
                    "description": "+/-",
                    "type": "string"
                },
                "sell": {
                    "type": "string"
                },
                "tick": {
                    "description": "tick",
                    "type": "string"
                },
                "vol": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                }
            }
        },
        "respond.CheckBrc20InscriptionReq": {
            "type": "object",
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "availableTransferState": {
                    "description": "Available Transfer state: success/fail",
                    "type": "string"
                },
                "blockHeight": {
                    "type": "string"
                },
                "inscriptionId": {
                    "type": "string"
                },
                "inscriptionNumber": {
                    "type": "string"
                },
                "inscriptionState": {
                    "description": "inscribe state: success/fail",
                    "type": "string"
                },
                "location": {
                    "description": "location - txid:vout:offset",
                    "type": "string"
                },
                "ownerAddress": {
                    "type": "string"
                },
                "token": {
                    "description": "tick name",
                    "type": "string"
                },
                "tokenType": {
                    "description": "token type",
                    "type": "string"
                },
                "txId": {
                    "type": "string"
                }
            }
        },
        "respond.DummyItem": {
            "type": "object",
            "properties": {
                "dummyId": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "respond.KlineItem": {
            "type": "object",
            "properties": {
                "0": {
                    "type": "string"
                },
                "1": {
                    "type": "string"
                },
                "2": {
                    "type": "string"
                },
                "3": {
                    "type": "string"
                },
                "4": {
                    "type": "string"
                },
                "5": {
                    "type": "string"
                },
                "6": {
                    "type": "string"
                },
                "7": {
                    "type": "string"
                },
                "8": {
                    "type": "string"
                },
                "9": {
                    "type": "string"
                },
                "net": {
                    "type": "string"
                }
            }
        },
        "respond.Message": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "processingTime": {
                    "type": "integer"
                }
            }
        },
        "respond.OrderResponse": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/respond.Brc20Item"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "respond.WsUuidResp": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/book",
	Schemes:     []string{"https"},
	Title:       "OrdBook API Service",
	Description: "OrdBook API Service",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
